services:    
  app:
    hostname: app
    build: .
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.service=app"
      - "traefik.http.routers.app.middlewares=app-stripprefix"
      - "traefik.http.middlewares.app-stripprefix.stripprefix.prefixes=/app"
      - "traefik.http.routers.app.rule=Host(`127.0.0.1`) && PathPrefix(`/app`)"
      - "traefik.http.services.app.loadbalancer.server.port=8000"

  reverse-proxy:
    image: traefik:v3.0
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--log.level=DEBUG" 
      - "--api.insecure=true" 
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.watch"
      - "--entryPoints.http.address=:80"  
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    
  portainer:
    hostname: portainer
    image: portainer/portainer-ce:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.service=portainer"
      - "traefik.http.routers.portainer.middlewares=portainer-stripprefix"
      - "traefik.http.middlewares.portainer-stripprefix.stripprefix.prefixes=/portainer"
      - "traefik.http.routers.portainer.rule=Host(`38.242.210.203`) && PathPrefix(`/portainer`)"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    volumes:
      - data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

volumes:
  data: